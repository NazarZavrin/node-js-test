
// –§–∞–π–ª—ã connect-get-db.js –∏ add-documents.js —Ç–µ –∂–µ, —á—Ç–æ –∏ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–º –ø—Ä–∏–º–µ—Ä–µ
// –§–∞–π–ª connect-get-db.js —Ç–æ—Ç –∂–µ, —á—Ç–æ –∏ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–º –ø—Ä–∏–º–µ—Ä–µ
// üìÅ index.js
const express = require('express');
const app = express();
const path = require('path');
const fs = require('fs');

const PORT = process.env.PORT ?? 3000;

app.use(express.static(path.join(path.resolve(), 'site')));

app.get('/add-note', (req, res) => {
    fs.appendFile(path.join(path.resolve(), "notes.txt"), "–ó–∞–ø–∏—Å—å\n", error => {
        if (error) {
            throw error;
        }
        res.send("–ó–∞–ø–∏—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞");
    })
})
app.get('/get-notes', (req, res) => {
    fs.readFile(path.join(path.resolve(), "notes.txt"), "utf-8", (error, data) => {
        if (error) {
            throw error;
        }
        res.send(data);
    })
})
app.get('/clear', (req, res) => {
    fs.writeFile(path.join(path.resolve(), "notes.txt"), "", error => {
        if (error) {
            throw error;
        }
        res.send("–ó–∞–ø–∏—Å–∏ —Å—Ç—ë—Ä—Ç—ã");
    })
})

// ‚Üì –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç–µ PORT
app.listen(PORT, () => {
    console.log(`Server has been started on port ${PORT}...`);
})










// let name = ["David", "Adam", "Henry", "James", "John", "Lily", "Alice", "Daniel", "Kevin" ]
// let surname = ["Hill", "Cliff", "King", "Cloud", 'Smith', ]
/*
finally {
        // Ensures that the client will close when you finish/error
        await client.close();
    }
 */






/* ‚Üë –í—ã–≤–µ–¥–µ—Ç:

*/
// <pre style="word-wrap: break-word; white-space: pre-wrap;"></pre>
// let fruit = ['–ü–µ—Ä—Å–∏–∫', '–ë–∞–Ω–∞–Ω', '–Ø–±–ª–æ–∫–æ', '–ê–ø–µ–ª—å—Å–∏–Ω', '–ì—Ä—É—à–∞', '–ê–Ω–∞–Ω–∞—Å', '–ê–±—Ä–∏–∫–æ—Å'];
// let name = ["David", "Adam", "Henry", "James", "John", "Lily", "Alice", "Daniel", "Kevin" ]
// let surname = ["Hill", "Cliff", "King", "Cloud", 'Smith', ]
// ‚Üë ‚Üì üìÅ
// let pathToChrome = 'C:/Program Files/Google/Chrome/Application/chrome.exe';