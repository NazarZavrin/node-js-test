

// üìÅ index.js
const express = require('express');
const app = express();
// ‚Üì –ø–æ–¥–∫–ª—é—á–∏—Ç—å –º–æ–¥—É–ª—å path
const path = require('path');
const fs = require('fs');

const PORT = process.env.PORT ?? 3000;

// ‚Üì –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º get-–∑–∞–ø—Ä–æ—Å, –ø–æ–ª—É—á–∞—é—â–∏–π —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
app.get('/', (req, res) => {
    // ‚Üì –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª main.html –∏–∑ –ø–∞–ø–∫–∏ site, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–µ
    res.send(fs.readFileSync(path.join(path.resolve(), "site", "main.html"), {"encoding": "utf8"}));
})

// ‚Üì –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º get-–∑–∞–ø—Ä–æ—Å, —á–∏—Ç–∞—é—â–∏–π —Ñ–∞–π–ª
app.get('/read', (req, res) => {
    // ‚Üì –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª manual.html –∏–∑ –ø–∞–ø–∫–∏ site, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–µ
    fs.readFile(path.join(path.resolve(), "notes.txt"), {"encoding": "utf8"}, (error, content) => {
        if (error) {
            res.send("Error: " + error);
        } else {
            res.send(`<div>${content}</div><a href='/'>–ù–∞ –≥–ª–∞–≤–Ω—É—é</a>`);// –æ—Ç–æ—Å–ª–∞—Ç—å —Å—Ç—Ä–æ–∫—É-—Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ –∫–∞–∫ –æ—Ç–≤–µ—Ç
        }
    })
})

// ‚Üì –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º get-–∑–∞–ø—Ä–æ—Å, –¥–æ–±–∞–≤–ª—è—é—â–∏–π –≤ —Ñ–∞–π–ª
app.get('/append', (req, res) => {
    // ‚Üì –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª manual.html –∏–∑ –ø–∞–ø–∫–∏ site, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–µ
    fs.appendFile(path.join(path.resolve(), "notes.txt"), "–ó–∞–ø–∏—Å—å ", (error) => {
        if (error) {
            res.send("Error: " + error);
        } else {
            res.send("<div>–ó–∞–ø–∏—Å—å –¥–æ–±–∞–≤–ª–µ–Ω–∞</div><a href='/'>–ù–∞ –≥–ª–∞–≤–Ω—É—é</a>");
        }
    })
})

// ‚Üì –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º get-–∑–∞–ø—Ä–æ—Å, —Å—Ç–∏—Ä–∞—é—â–∏–π —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
app.get('/erase', (req, res) => {
    // ‚Üì –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª manual.html –∏–∑ –ø–∞–ø–∫–∏ site, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–µ
    fs.writeFile(path.join(path.resolve(), "notes.txt"), "", (error) => {
        if (error) {
            res.send("Error: " + error);
        } else {
            res.send("<div>–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ —Å—Ç—ë—Ä—Ç–æ</div><a href='/'>–ù–∞ –≥–ª–∞–≤–Ω—É—é</a>");
        }
    })
})

app.listen(PORT, () => {
    console.log(`Server has been started on port ${PORT}...`);
})












/* ‚Üë –í—ã–≤–µ–¥–µ—Ç:

*/
// let fruit = ['–ü–µ—Ä—Å–∏–∫', '–ë–∞–Ω–∞–Ω', '–Ø–±–ª–æ–∫–æ', '–ê–ø–µ–ª—å—Å–∏–Ω', '–ì—Ä—É—à–∞', '–ê–Ω–∞–Ω–∞—Å', '–ê–±—Ä–∏–∫–æ—Å'];
// let name = ["David", "Adam", "Henry", "James", "John", "Lily", "Alice", "Daniel", ]
// let surname = ["Hill", "Cliff", "King", "Cloud", 'Smith', ]
// ‚Üë ‚Üì üìÅ
// let pathToChrome = 'C:/Program Files/Google/Chrome/Application/chrome.exe';